name: Build and Release Nodevin

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'

      - name: Build and package binary for ${{ matrix.os }}
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            make build-linux package-linux
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            make build-macos package-macos
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            make build-windows package-windows
          fi

      - name: Create release (only for Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: "Automated release notes."
          draft: false
          prerelease: false

      - name: Upload binary for ${{ matrix.os }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url || steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'macos' || matrix.os == 'windows-latest' && 'windows' }}-${{ github.ref_name }}.tar.gz
          asset_name: nodevin-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'macos' || matrix.os == 'windows-latest' && 'windows' }}-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload checksum for ${{ matrix.os }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url || steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'macos' || matrix.os == 'windows-latest' && 'windows' }}-${{ github.ref_name }}.tar.gz.sha256
          asset_name: nodevin-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'macos' || matrix.os == 'windows-latest' && 'windows' }}-${{ github.ref_name }}.tar.gz.sha256
          asset_content_type: text/plain
