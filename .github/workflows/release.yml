name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'

      - name: Build and package binaries
        run: |
          make package

      - name: Get release notes from commits
        id: release_notes
        run: |
          notes=$(git log -1 --pretty=format:"%s%n%b" ${{ github.ref }})
          echo "notes=${notes}" >> $GITHUB_ENV

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ env.notes }}
          draft: false
          prerelease: false

      - name: Upload Linux binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-linux-$(git describe --tags --abbrev=0).tar.gz
          asset_name: nodevin-linux-$(git describe --tags --abbrev=0).tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-linux-$(git describe --tags --abbrev=0).tar.gz.sha256
          asset_name: nodevin-linux-$(git describe --tags --abbrev=0).tar.gz.sha256
          asset_content_type: text/plain

      - name: Upload macOS binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-macos-$(git describe --tags --abbrev=0).tar.gz
          asset_name: nodevin-macos-$(git describe --tags --abbrev=0).tar.gz
          asset_content_type: application/gzip

      - name: Upload macOS checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-macos-$(git describe --tags --abbrev=0).tar.gz.sha256
          asset_name: nodevin-macos-$(git describe --tags --abbrev=0).tar.gz.sha256
          asset_content_type: text/plain

      - name: Upload Windows binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-windows-$(git describe --tags --abbrev=0).zip
          asset_name: nodevin-windows-$(git describe --tags --abbrev=0).zip
          asset_content_type: application/zip

      - name: Upload Windows checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-windows-$(git describe --tags --abbrev=0).zip.sha256
          asset_name: nodevin-windows-$(git describe --tags --abbrev=0).zip.sha256
          asset_content_type: text/plain
