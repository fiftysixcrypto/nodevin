on: 
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'

      # Get the version/tag name from the push
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      # Gather commit logs between the previous tag and the current tag
      - name: Gather commit logs
        id: gather_commits
        run: |
          if git describe --tags --abbrev=0 HEAD^ > /dev/null 2>&1; then
            PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          else
            PREV_TAG=$(git rev-list --max-parents=0 HEAD)  # First commit
          fi
          COMMITS=$(git log $PREV_TAG..HEAD --pretty=format:"%h %s")
          echo "commits=$COMMITS" >> $GITHUB_ENV

      # Build and package the Linux binaries
      - name: Build and package Linux binaries
        run: |
          make build-linux-amd64 package-linux-amd64
          make build-linux-arm64 package-linux-arm64

      # Build and package the macOS binaries
      - name: Build and package macOS binaries
        run: |
          make build-macos-amd64 package-macos-amd64
          make build-macos-arm64 package-macos-arm64

      # Build and package the Windows binaries
      - name: Build and package Windows binaries
        run: |
          make build-windows-amd64 package-windows-amd64
          make build-windows-arm64 package-windows-arm64

      # Create a GitHub release with commit logs
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: |
            Nodevin version ${{ github.ref_name }} release notes:

            Commits included in this release:
            ${{ env.commits }}
          draft: false
          prerelease: false

      # Upload Linux binaries and checksums
      - name: Upload Linux amd64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-linux-amd64-${{ github.ref_name }}.tar.gz
          asset_name: nodevin-linux-amd64-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux amd64 checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-linux-amd64-${{ github.ref_name }}.tar.gz.sha256
          asset_name: nodevin-linux-amd64-${{ github.ref_name }}.tar.gz.sha256
          asset_content_type: text/plain

      - name: Upload Linux arm64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-linux-arm64-${{ github.ref_name }}.tar.gz
          asset_name: nodevin-linux-arm64-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Linux arm64 checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-linux-arm64-${{ github.ref_name }}.tar.gz.sha256
          asset_name: nodevin-linux-arm64-${{ github.ref_name }}.tar.gz.sha256
          asset_content_type: text/plain

      # Upload macOS binaries and checksums
      - name: Upload macOS amd64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-macos-amd64-${{ github.ref_name }}.tar.gz
          asset_name: nodevin-macos-amd64-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload macOS amd64 checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-macos-amd64-${{ github.ref_name }}.tar.gz.sha256
          asset_name: nodevin-macos-amd64-${{ github.ref_name }}.tar.gz.sha256
          asset_content_type: text/plain

      - name: Upload macOS arm64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-macos-arm64-${{ github.ref_name }}.tar.gz
          asset_name: nodevin-macos-arm64-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload macOS arm64 checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-macos-arm64-${{ github.ref_name }}.tar.gz.sha256
          asset_name: nodevin-macos-arm64-${{ github.ref_name }}.tar.gz.sha256
          asset_content_type: text/plain

      # Upload Windows binaries and checksums
      - name: Upload Windows amd64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-windows-amd64-${{ github.ref_name }}.zip
          asset_name: nodevin-windows-amd64-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Windows amd64 checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-windows-amd64-${{ github.ref_name }}.zip.sha256
          asset_name: nodevin-windows-amd64-${{ github.ref_name }}.zip.sha256
          asset_content_type: text/plain

      - name: Upload Windows arm64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-windows-arm64-${{ github.ref_name }}.zip
          asset_name: nodevin-windows-arm64-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Windows arm64 checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodevin-windows-arm64-${{ github.ref_name }}.zip.sha256
          asset_name: nodevin-windows-arm64-${{ github.ref_name }}.zip.sha256
          asset_content_type: text/plain
